version: '3.7'
services:

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: on-failure

  web:
    build: ./
    command: >
      sh -c "sleep 10 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    image: web-image
    depends_on:
      - db
      - rabbitmq

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=bb_user
      - POSTGRES_PASSWORD=bb_pass
      - POSTGRES_DB=bulletinboard

  celery_worker_1:
    command: sh -c "sleep 20 &&  celery -A config worker --loglevel=INFO --concurrency=10 -n worker1@%h"
    depends_on:
      - web
      - db
      - rabbitmq
    image: web-image

  celery_worker_2:
    command: sh -c "sleep 20 &&  celery -A config worker --loglevel=INFO --concurrency=10 -n worker2@%h"
    depends_on:
      - web
      - db
      - rabbitmq
    image: web-image

  dashboard:
    command: sh -c "sleep 30 && flower -A config --port=5555"
    ports:
      - 5555:5555
    depends_on:
      - web
      - db
      - rabbitmq
    image: web-image

volumes:
  postgres_data: